{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../service/user.service\";\nimport * as i3 from \"@angular/forms\";\nclass UpdateUserComponent {\n  constructor(route, router, userService) {\n    this.route = route;\n    this.router = router;\n    this.userService = userService;\n    this.updateUserFormModel = {};\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.userId = +params['id'];\n      //this.getUserDetails();\n    });\n  }\n  // getUserDetails() {\n  //   this.userService.getUser(this.userId).subscribe(user => {\n  //     this.updateUserFormModel = user;\n  //   });\n  // }\n  updateUser() {\n    this.userService.updateUser(this.userId, this.updateUserFormModel).subscribe(response => {\n      // Handle success response\n      console.log('User updated successfully:', response);\n      this.router.navigate(['/login']); // Redirect to login page\n    }, error => {\n      // Handle error response\n      console.error('Error updating user:', error);\n      // Optionally, you can display an error message to the user\n    });\n  }\n}\n\nUpdateUserComponent.ɵfac = function UpdateUserComponent_Factory(t) {\n  return new (t || UpdateUserComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.UserService));\n};\nUpdateUserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateUserComponent,\n  selectors: [[\"app-update-user\"]],\n  decls: 23,\n  vars: 4,\n  consts: [[3, \"ngSubmit\"], [\"updateForm\", \"ngForm\"], [\"for\", \"firstName\"], [\"type\", \"text\", \"id\", \"firstName\", \"name\", \"firstName\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"lastName\"], [\"type\", \"text\", \"id\", \"lastName\", \"name\", \"lastName\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\"], [\"type\", \"text\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n  template: function UpdateUserComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n      i0.ɵɵtext(2, \"Update User\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 0, 1);\n      i0.ɵɵlistener(\"ngSubmit\", function UpdateUserComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.updateUser();\n      });\n      i0.ɵɵelementStart(5, \"div\")(6, \"label\", 2);\n      i0.ɵɵtext(7, \"First Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateUserComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.updateUserFormModel.firstName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\")(10, \"label\", 4);\n      i0.ɵɵtext(11, \"Last Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateUserComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.updateUserFormModel.lastName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\")(14, \"label\", 6);\n      i0.ɵɵtext(15, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateUserComponent_Template_input_ngModelChange_16_listener($event) {\n        return ctx.updateUserFormModel.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\")(18, \"label\", 8);\n      i0.ɵɵtext(19, \"email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateUserComponent_Template_input_ngModelChange_20_listener($event) {\n        return ctx.updateUserFormModel.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"button\", 10);\n      i0.ɵɵtext(22, \"Save\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.updateUserFormModel.firstName);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.updateUserFormModel.lastName);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.updateUserFormModel.password);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.updateUserFormModel.email);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { UpdateUserComponent };","map":{"version":3,"names":["UpdateUserComponent","constructor","route","router","userService","updateUserFormModel","ngOnInit","params","subscribe","userId","updateUser","response","console","log","navigate","error","i0","ɵɵdirectiveInject","i1","ActivatedRoute","Router","i2","UserService","selectors","decls","vars","consts","template","UpdateUserComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","UpdateUserComponent_Template_form_ngSubmit_3_listener","UpdateUserComponent_Template_input_ngModelChange_8_listener","$event","firstName","UpdateUserComponent_Template_input_ngModelChange_12_listener","lastName","UpdateUserComponent_Template_input_ngModelChange_16_listener","password","UpdateUserComponent_Template_input_ngModelChange_20_listener","email","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\zprajap1\\Desktop\\IntelliJ Projects\\POCDeep-main\\POCDeep-main\\Frontend\\user-management-system\\src\\app\\component\\update-user\\update-user.component.ts","C:\\Users\\zprajap1\\Desktop\\IntelliJ Projects\\POCDeep-main\\POCDeep-main\\Frontend\\user-management-system\\src\\app\\component\\update-user\\update-user.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService } from '../../service/user.service';\n\n@Component({\n  selector: 'app-update-user',\n  templateUrl: './update-user.component.html',\n  styleUrls: ['./update-user.component.css']\n})\nexport class UpdateUserComponent implements OnInit {\n  userId!: number;\n  updateUserFormModel: any = {};\n\n  constructor(private route: ActivatedRoute, private router: Router, private userService: UserService) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.userId = +params['id'];\n      //this.getUserDetails();\n    });\n  }\n\n  // getUserDetails() {\n  //   this.userService.getUser(this.userId).subscribe(user => {\n  //     this.updateUserFormModel = user;\n  //   });\n  // }\n\n  updateUser() {\n    this.userService.updateUser(this.userId, this.updateUserFormModel).subscribe(response => {\n      // Handle success response\n      console.log('User updated successfully:', response);\n      this.router.navigate(['/login']); // Redirect to login page\n    }, error => {\n      // Handle error response\n      console.error('Error updating user:', error);\n      // Optionally, you can display an error message to the user\n    });\n  }\n}\n","<div>\n    <h2>Update User</h2>\n    <form (ngSubmit)=\"updateUser()\" #updateForm=\"ngForm\">\n        <div>\n            <label for=\"firstName\">First Name:</label>\n            <input type=\"text\" id=\"firstName\" name=\"firstName\" [(ngModel)]=\"updateUserFormModel.firstName\" required>\n        </div>\n        <div>\n            <label for=\"lastName\">Last Name:</label>\n            <input type=\"text\" id=\"lastName\" name=\"lastName\" [(ngModel)]=\"updateUserFormModel.lastName\" required>\n        </div>\n        <div>\n            <label for=\"password\">Password:</label>\n            <input type=\"password\" id=\"password\" name=\"password\" [(ngModel)]=\"updateUserFormModel.password\" required>\n        </div>\n        <div>\n            <label for=\"email\">email:</label>\n            <input type=\"text\" id=\"email\" name=\"email\" [(ngModel)]=\"updateUserFormModel.email\" required>\n        </div>\n        <button type=\"submit\">Save</button>\n    </form>\n</div>\n"],"mappings":";;;;AAIA,MAKaA,mBAAmB;EAI9BC,YAAoBC,KAAqB,EAAUC,MAAc,EAAUC,WAAwB;IAA/E,KAAAF,KAAK,GAALA,KAAK;IAA0B,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,WAAW,GAAXA,WAAW;IAFtF,KAAAC,mBAAmB,GAAQ,EAAE;EAE0E;EAEvGC,QAAQA,CAAA;IACN,IAAI,CAACJ,KAAK,CAACK,MAAM,CAACC,SAAS,CAACD,MAAM,IAAG;MACnC,IAAI,CAACE,MAAM,GAAG,CAACF,MAAM,CAAC,IAAI,CAAC;MAC3B;IACF,CAAC,CAAC;EACJ;EAEA;EACA;EACA;EACA;EACA;EAEAG,UAAUA,CAAA;IACR,IAAI,CAACN,WAAW,CAACM,UAAU,CAAC,IAAI,CAACD,MAAM,EAAE,IAAI,CAACJ,mBAAmB,CAAC,CAACG,SAAS,CAACG,QAAQ,IAAG;MACtF;MACAC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,QAAQ,CAAC;MACnD,IAAI,CAACR,MAAM,CAACW,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC,EAAEC,KAAK,IAAG;MACT;MACAH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C;IACF,CAAC,CAAC;EACJ;;;AA7BWf,mBAAmB,C;mBAAnBA,mBAAmB,EAAAgB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAE,MAAA,GAAAJ,EAAA,CAAAC,iBAAA,CAAAI,EAAA,CAAAC,WAAA;AAAA;AAAnBtB,mBAAmB,C;QAAnBA,mBAAmB;EAAAuB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCThCb,EAAA,CAAAe,cAAA,UAAK;MACGf,EAAA,CAAAgB,MAAA,kBAAW;MAAAhB,EAAA,CAAAiB,YAAA,EAAK;MACpBjB,EAAA,CAAAe,cAAA,iBAAqD;MAA/Cf,EAAA,CAAAkB,UAAA,sBAAAC,sDAAA;QAAA,OAAYL,GAAA,CAAApB,UAAA,EAAY;MAAA,EAAC;MAC3BM,EAAA,CAAAe,cAAA,UAAK;MACsBf,EAAA,CAAAgB,MAAA,kBAAW;MAAAhB,EAAA,CAAAiB,YAAA,EAAQ;MAC1CjB,EAAA,CAAAe,cAAA,eAAwG;MAArDf,EAAA,CAAAkB,UAAA,2BAAAE,4DAAAC,MAAA;QAAA,OAAAP,GAAA,CAAAzB,mBAAA,CAAAiC,SAAA,GAAAD,MAAA;MAAA,EAA2C;MAA9FrB,EAAA,CAAAiB,YAAA,EAAwG;MAE5GjB,EAAA,CAAAe,cAAA,UAAK;MACqBf,EAAA,CAAAgB,MAAA,kBAAU;MAAAhB,EAAA,CAAAiB,YAAA,EAAQ;MACxCjB,EAAA,CAAAe,cAAA,gBAAqG;MAApDf,EAAA,CAAAkB,UAAA,2BAAAK,6DAAAF,MAAA;QAAA,OAAAP,GAAA,CAAAzB,mBAAA,CAAAmC,QAAA,GAAAH,MAAA;MAAA,EAA0C;MAA3FrB,EAAA,CAAAiB,YAAA,EAAqG;MAEzGjB,EAAA,CAAAe,cAAA,WAAK;MACqBf,EAAA,CAAAgB,MAAA,iBAAS;MAAAhB,EAAA,CAAAiB,YAAA,EAAQ;MACvCjB,EAAA,CAAAe,cAAA,gBAAyG;MAApDf,EAAA,CAAAkB,UAAA,2BAAAO,6DAAAJ,MAAA;QAAA,OAAAP,GAAA,CAAAzB,mBAAA,CAAAqC,QAAA,GAAAL,MAAA;MAAA,EAA0C;MAA/FrB,EAAA,CAAAiB,YAAA,EAAyG;MAE7GjB,EAAA,CAAAe,cAAA,WAAK;MACkBf,EAAA,CAAAgB,MAAA,cAAM;MAAAhB,EAAA,CAAAiB,YAAA,EAAQ;MACjCjB,EAAA,CAAAe,cAAA,gBAA4F;MAAjDf,EAAA,CAAAkB,UAAA,2BAAAS,6DAAAN,MAAA;QAAA,OAAAP,GAAA,CAAAzB,mBAAA,CAAAuC,KAAA,GAAAP,MAAA;MAAA,EAAuC;MAAlFrB,EAAA,CAAAiB,YAAA,EAA4F;MAEhGjB,EAAA,CAAAe,cAAA,kBAAsB;MAAAf,EAAA,CAAAgB,MAAA,YAAI;MAAAhB,EAAA,CAAAiB,YAAA,EAAS;;;MAdoBjB,EAAA,CAAA6B,SAAA,GAA2C;MAA3C7B,EAAA,CAAA8B,UAAA,YAAAhB,GAAA,CAAAzB,mBAAA,CAAAiC,SAAA,CAA2C;MAI7CtB,EAAA,CAAA6B,SAAA,GAA0C;MAA1C7B,EAAA,CAAA8B,UAAA,YAAAhB,GAAA,CAAAzB,mBAAA,CAAAmC,QAAA,CAA0C;MAItCxB,EAAA,CAAA6B,SAAA,GAA0C;MAA1C7B,EAAA,CAAA8B,UAAA,YAAAhB,GAAA,CAAAzB,mBAAA,CAAAqC,QAAA,CAA0C;MAIpD1B,EAAA,CAAA6B,SAAA,GAAuC;MAAvC7B,EAAA,CAAA8B,UAAA,YAAAhB,GAAA,CAAAzB,mBAAA,CAAAuC,KAAA,CAAuC;;;;;;SDRjF5C,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}